---
# Default variables for the OpenDaylight role. Override as needed.

# The point of defining default_* and extra_* lists (like default_features
# and extra_features), instead of using one common list (like a features
# list, with the two aggregated) is to simplify the user experience.
# From a playbook using this role, overriding an empty extra_* list and
# ignoring the boring default_* counterpart is easier than appending
# to a common list or enumerating both the ODL-required defaults and the
# extras you actually care about.

# The set of Karaf features installed by default in ODL's release artifact.
# You likely don't need to override these. With only these, you'll be
# able to connect to a Karaf shell and poke around ODL, including
# potentially manually installing features, but that's about it.
# It's better to avoid that manual step by overriding the extra_features
# list with the additional ODL features required by your use-case.
default_features:
  - 'config'
  - 'standard'
  - 'region'
  - 'package'
  - 'kar'
  - 'ssh'
  - 'management'

# Karaf features to install *in addition* to the default_features list.
# You will likely need to override this. The features you choose will
# be determined by your use-case. You'll be able to get a Karaf
# shell and poke around without any extras, but manually connecting to
# CLIs is an anti-goal for CI/CD and automated deployments generally.
extra_features: []

# Specifies the port for the ODL northbound REST interface to listen on.
# This was added because OpenStack's Swift project uses a conflicting port.
nb_rest_port: 8080

# Method to install ODL
# Valid options:
#   rpm_repo: Install ODL using its Yum repo config
#   rpm_path: Install ODL rpm from a local path or remote URL
#   dep_repo: Install ODL using a debian repository
#   deb_path: Install ODL .deb from a local path or remote URL
install_method: "rpm_repo"

# URL of the .repo config to use when installing ODL from a repo
# NB: This will only take effect when `install_method` is "rpm_repo"
rpm_repo_file: "opendaylight-5-release.repo"
rpm_repo_url: "https://git.opendaylight.org/gerrit/gitweb?p=integration/packaging.git;a=blob_plain;f=rpm/example_repo_configs/opendaylight-5-release.repo;hb=refs/heads/master"

# URL of the deb repository to use when installing ODL from a repo
# NB: This will only take effect when `install_method` is "deb_repo"
deb_repo_url: "ppa:odl-team/carbon"

# This will be passed as the `name` param to the Ansible `yum` module.
# `name` param docs: "You can also pass a url or a local path to a rpm file."
#   See: http://docs.ansible.com/ansible/yum_module.html
# NB: Local paths must be relative the host being configured (think `/vagrant`)
# NB: This will only take effect when `install_method` is "rpm_path"
# Default to the Boron SR2 RPM hosted on the CentOS Community Build System
rpm_path: "http://cbs.centos.org/repos/nfv7-opendaylight-52-release/x86_64/os/Packages/opendaylight-5.2.0-1.el7.noarch.rpm"

# This will be passed as the `deb` param to the Ansible `apt` module.
# `deb` param docs: "Path to a .deb package on the remote machine. If :// in the path,
#                    ansible will attempt to download deb before installing."
#   See: http://docs.ansible.com/ansible/apt_module.html
# This is used when `install_method` is "deb_path"
deb_path: ""
